// <auto-generated />
using System;
using JobFinder.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobFinder.Infrastructure.Migrations
{
    [DbContext(typeof(JobFinderDbContext))]
    [Migration("20241126122611_addedEmployerTableAndJobsTable")]
    partial class addedEmployerTableAndJobsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobFinder.Domain.EmployerAggregate.Employer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employers", (string)null);
                });

            modelBuilder.Entity("JobFinder.Domain.SkillAggregate.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SkillId");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("JobFinder.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("JobFinder.Domain.EmployerAggregate.Employer", b =>
                {
                    b.OwnsMany("JobFinder.Domain.JobAggregate.Job", "Jobs", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("JobId");

                            b1.Property<Guid>("EmployerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("EmployementType")
                                .HasColumnType("int");

                            b1.Property<string>("JobDescription")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("JobTitle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Location")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("MaxSalaryRange")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("MinSalaryRange")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("Id", "EmployerId");

                            b1.HasIndex("EmployerId");

                            b1.ToTable("Jobs", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployerId");

                            b1.OwnsMany("JobFinder.Domain.SkillAggregate.ValueObjects.SkillId", "Requirements", b2 =>
                                {
                                    b2.Property<Guid>("JobId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("JobEmployerId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("SkillId");

                                    b2.HasKey("JobId", "JobEmployerId", "Id");

                                    b2.ToTable("JobsRequirements", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("JobId", "JobEmployerId");
                                });

                            b1.Navigation("Requirements");
                        });

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("JobFinder.Domain.UserAggregate.User", b =>
                {
                    b.OwnsMany("JobFinder.Domain.ResumeAggregate.Resume", "Resumes", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ResumeId");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id", "UserId");

                            b1.HasIndex("UserId");

                            b1.ToTable("Resumes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsMany("JobFinder.Domain.SkillAggregate.ValueObjects.SkillId", "Skills", b2 =>
                                {
                                    b2.Property<Guid>("ResumeId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ResumeUserId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("SkillId");

                                    b2.HasKey("ResumeId", "ResumeUserId", "Id");

                                    b2.ToTable("SkillIds", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ResumeId", "ResumeUserId");
                                });

                            b1.Navigation("Skills");
                        });

                    b.Navigation("Resumes");
                });
#pragma warning restore 612, 618
        }
    }
}
